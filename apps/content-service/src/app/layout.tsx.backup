import './globals.css'
import { Inter } from 'next/font/google'
import { AuthProvider } from './providers/auth-provider'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Content Service - TT-MS-Stack',
  description: 'Content management microservice',
}

// Simple inline layout to avoid type conflicts
function SimpleLayout({ children }: { children: React.ReactNode }) {
  return (
    <div className="min-h-screen bg-gray-50 flex flex-col">
      {/* Header */}
      <header className="bg-purple-600 text-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16 items-center">
            <div className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-purple-800 rounded-lg flex items-center justify-center text-white font-bold">
                C
              </div>
              <span className="text-xl font-semibold">Content Service</span>
            </div>
            
            {/* Navigation Links */}
            <div className="hidden md:flex md:space-x-8">
              <a href="/" className="text-white hover:text-purple-200 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Home
              </a>
              <a href="/articles" className="text-white hover:text-purple-200 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Articles
              </a>
              <a href="/media" className="text-white hover:text-purple-200 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Media
              </a>
              <a href="/categories" className="text-white hover:text-purple-200 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Categories
              </a>
              <a href="/analytics" className="text-white hover:text-purple-200 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Analytics
              </a>
            </div>
            
            {/* Service Switcher */}
            <div className="flex items-center space-x-4">
              <span className="text-sm">Switch Service:</span>
              <a href="http://localhost:3000" className="text-xs px-2 py-1 rounded bg-purple-700 hover:bg-purple-800 transition-colors">
                Auth Service
              </a>
              <a href="http://localhost:3001" className="text-xs px-2 py-1 rounded bg-purple-700 hover:bg-purple-800 transition-colors">
                User Service
              </a>
              <span className="text-xs px-2 py-1 rounded bg-purple-800">
                Content Service
              </span>
            </div>
          </div>
        </div>
      </header>
      
      {/* Main Content */}
      <main className="flex-1 max-w-7xl mx-auto py-6 sm:px-6 lg:px-8 w-full">
        {children}
      </main>
      
      {/* Footer */}
      <footer className="bg-white border-t border-gray-200 mt-auto">
        <div className="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="text-gray-600 text-sm">
              Â© 2025 Content Service. Part of TT-MS-Stack.
            </div>
            <div className="flex space-x-6 mt-4 md:mt-0">
              <a href="/privacy" className="text-gray-600 hover:text-gray-900 text-sm transition-colors">
                Privacy Policy
              </a>
              <a href="/terms" className="text-gray-600 hover:text-gray-900 text-sm transition-colors">
                Terms of Service
              </a>
              <a href="/support" className="text-gray-600 hover:text-gray-900 text-sm transition-colors">
                Support
              </a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  )
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <AuthProvider>
          <SimpleLayout>
            {children}
          </SimpleLayout>
        </AuthProvider>
      </body>
    </html>
  )
}
